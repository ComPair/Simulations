void PlotGRB170817A_Lightcurve_w_GBM();

void PlotGRB170817A_Lightcurve_w_GBM(){

	//Import the lightcurve and draw
	TFile * f = new TFile("GRB170817A_lightcurve_D.root");
	TCanvas * C = (TCanvas*)f->Get("TimeOptimized");
	TH1D * lightcurve = (TH1D*)C->GetPrimitive("TimeOptimized");
	
	lightcurve->Sumw2();

	TCanvas * c_new = new TCanvas("c_new", "c_new", 100, 100, 500, 500);
	c_new->SetBottomMargin(0.15);
	c_new->SetLeftMargin(0.15);
	lightcurve->SetTitle("");
	lightcurve->GetXaxis()->SetTitle("Time (sec)");
	lightcurve->GetXaxis()->SetTitleOffset(1.4);
	lightcurve->GetXaxis()->SetTitleSize(0.05);
	lightcurve->GetXaxis()->SetLabelSize(0.04);
	lightcurve->GetYaxis()->SetTitle("Counts/sec");
	lightcurve->GetYaxis()->SetTitleOffset(1.4);
	lightcurve->GetYaxis()->SetLabelSize(0.04);
	lightcurve->GetYaxis()->SetTitleSize(0.05);
	lightcurve->GetYaxis()->SetNdivisions(505);
	lightcurve->SetFillStyle(0);
	lightcurve->SetLineColor(kRed);
	lightcurve->GetYaxis()->SetRangeUser(0, 2000);

	lightcurve->Draw("HIST E1 X0");
	
	double bin_width = lightcurve->GetBinWidth(0);
	
	//Rebin and scale to be cts/s
	lightcurve->Scale(bin_width);
	lightcurve->Rebin(32);
	lightcurve->Scale(1/lightcurve->GetBinWidth(0));
	
	//Set root(N) errors
	for (int i = 0; i < lightcurve->GetNbinsX(); i++) {
		lightcurve->SetBinError(i, sqrt(lightcurve->GetBinContent(i)));
	}
	lightcurve->GetYaxis()->SetRangeUser(0, 2000);


	//Import GBM data - deinitely not pretty, but I'm in a rush.
	double gbm[2][400] = {{-4.287879824638367, -4.255879819393158, -4.223879814147949, -4.223879814147949, -4.1918798089027405, -4.159879803657532, -4.159879803657532, -4.127879798412323, -4.095879793167114,\
	 -4.095879793167114, -4.0638797879219055, -4.031879782676697, -4.031879782676697, -3.999879777431488, -3.9678797721862793, -3.9678797721862793, -3.9358797669410706, -3.903879761695862, -3.903879761695862,\
	 -3.871879756450653, -3.8398797512054443, -3.8398797512054443, -3.8078797459602356, -3.775879740715027, -3.775879740715027, -3.743879735469818, -3.7118797302246094, -3.7118797302246094, -3.6798797249794006,\
	 -3.647879719734192, -3.647879719734192, -3.615879714488983, -3.5838797092437744, -3.5838797092437744, -3.5518797039985657, -3.519879698753357, -3.519879698753357, -3.487879693508148, -3.4558796882629395,\
	 -3.4558796882629395, -3.4238796830177307, -3.391879677772522, -3.391879677772522, -3.3598796725273132, -3.3278796672821045, -3.3278796672821045, -3.2958796620368958, -3.263879656791687, -3.263879656791687,\
	 -3.2318796515464783, -3.1998796463012695, -3.1998796463012695, -3.167879641056061, -3.135879635810852, -3.135879635810852, -3.1038796305656433, -3.0718796253204346, -3.0718796253204346, -3.039879620075226,\
	 -3.007879614830017, -3.007879614830017, -2.9758796095848083, -2.9438796043395996, -2.9438796043395996, -2.911879599094391, -2.879879593849182, -2.879879593849182, -2.8478795886039734, -2.8158795833587646,\
	 -2.8158795833587646, -2.783879578113556, -2.751879572868347, -2.751879572868347, -2.7198795676231384, -2.6878795623779297, -2.6878795623779297, -2.655879557132721, -2.623879551887512, -2.623879551887512,\
	 -2.5918795466423035, -2.5598795413970947, -2.5598795413970947, -2.527879536151886, -2.4958795309066772, -2.4958795309066772, -2.4638795256614685, -2.4318795204162598, -2.4318795204162598, -2.399879515171051,\
	 -2.3678795099258423, -2.3678795099258423, -2.3358795046806335, -2.303879499435425, -2.303879499435425, -2.271879494190216, -2.2398794889450073, -2.2398794889450073, -2.2078794836997986, -2.17587947845459,\
	 -2.17587947845459, -2.143879473209381, -2.1118794679641724, -2.1118794679641724, -2.0798794627189636, -2.047879457473755, -2.047879457473755, -2.015879452228546, -1.9838794469833374, -1.9838794469833374,\
	 -1.9518794417381287, -1.91987943649292, -1.91987943649292, -1.8878794312477112, -1.8558794260025024, -1.8558794260025024, -1.8238794207572937, -1.791879415512085, -1.791879415512085, -1.7598794102668762,\
	 -1.7278794050216675, -1.7278794050216675, -1.6958793997764587, -1.66387939453125, -1.66387939453125, -1.6318793892860413, -1.5998793840408325, -1.5998793840408325, -1.5678793787956238, -1.535879373550415,\
	 -1.535879373550415, -1.5038793683052063, -1.4718793630599976, -1.4718793630599976, -1.4398793578147888, -1.40787935256958, -1.40787935256958, -1.3758793473243713, -1.3438793420791626, -1.3438793420791626,\
	 -1.3118793368339539, -1.2798793315887451, -1.2798793315887451, -1.2478793263435364, -1.2158793210983276, -1.2158793210983276, -1.183879315853119, -1.1518793106079102, -1.1518793106079102, -1.1198793053627014,\
	 -1.0878793001174927, -1.0878793001174927, -1.055879294872284, -1.0238792896270752, -1.0238792896270752, -0.9918792843818665, -0.9598792791366577, -0.9598792791366577, -0.927879273891449, -0.8958792686462402,\
	 -0.8958792686462402, -0.8638792634010315, -0.8318792581558228, -0.8318792581558228, -0.799879252910614, -0.7678792476654053, -0.7678792476654053, -0.7358792424201965, -0.7038792371749878, -0.7038792371749878,\
	 -0.671879231929779, -0.6398792266845703, -0.6398792266845703, -0.6078792214393616, -0.5758792161941528, -0.5758792161941528, -0.5438792109489441, -0.5118792057037354, -0.5118792057037354, -0.4798792004585266,\
	 -0.44787919521331787, -0.44787919521331787, -0.41587918996810913, -0.3838791847229004, -0.3838791847229004, -0.35187917947769165, -0.3198791742324829, -0.3198791742324829, -0.28787916898727417, -0.25587916374206543,\
	 -0.25587916374206543, -0.2238791584968567, -0.19187915325164795, -0.19187915325164795, -0.1598791480064392, -0.12787914276123047, -0.12787914276123047, -0.09587913751602173, -0.06387913227081299, -0.06387913227081299,\
	 -0.03187912702560425, 0.00012087821960449219, 0.00012087821960449219, 0.03212088346481323, 0.06412088871002197, 0.06412088871002197, 0.09612089395523071, 0.12812089920043945, 0.12812089920043945, 0.1601209044456482,\
	 0.19212090969085693, 0.19212090969085693, 0.22412091493606567, 0.2561209201812744, 0.2561209201812744, 0.28812092542648315, 0.3201209306716919, 0.3201209306716919, 0.35212093591690063, 0.3841209411621094,\
	 0.3841209411621094, 0.4161209464073181, 0.44812095165252686, 0.44812095165252686, 0.4801209568977356, 0.5121209621429443, 0.5121209621429443, 0.5441209673881531, 0.5761209726333618, 0.5761209726333618,\
	 0.6081209778785706, 0.6401209831237793, 0.6401209831237793, 0.672120988368988, 0.7041209936141968, 0.7041209936141968, 0.7361209988594055, 0.7681210041046143, 0.7681210041046143, 0.800121009349823, 0.8321210145950317,\
	 0.8321210145950317, 0.8641210198402405, 0.8961210250854492, 0.8961210250854492, 0.928121030330658, 0.9601210355758667, 0.9601210355758667, 0.9921210408210754, 1.0241210460662842, 1.0241210460662842, 1.056121051311493,\
	 1.0881210565567017, 1.0881210565567017, 1.1201210618019104, 1.1521210670471191, 1.1521210670471191, 1.1841210722923279, 1.2161210775375366, 1.2161210775375366, 1.2481210827827454, 1.280121088027954, 1.280121088027954,\
	 1.3121210932731628, 1.3441210985183716, 1.3441210985183716, 1.3761211037635803, 1.408121109008789, 1.408121109008789, 1.4401211142539978, 1.4721211194992065, 1.4721211194992065, 1.5041211247444153, 1.536121129989624,\
	 1.536121129989624, 1.5681211352348328, 1.6001211404800415, 1.6001211404800415, 1.6321211457252502, 1.664121150970459, 1.664121150970459, 1.6961211562156677, 1.7281211614608765, 1.7281211614608765, 1.7601211667060852,\
	 1.792121171951294, 1.792121171951294, 1.8241211771965027, 1.8561211824417114, 1.8561211824417114, 1.8881211876869202, 1.920121192932129, 1.920121192932129, 1.9521211981773376, 1.9841212034225464, 1.9841212034225464,\
	 2.016121208667755, 2.048121213912964, 2.048121213912964, 2.0801212191581726, 2.1121212244033813, 2.1121212244033813, 2.14412122964859, 2.176121234893799, 2.176121234893799, 2.2081212401390076, 2.2401212453842163,\
	 2.2401212453842163, 2.272121250629425, 2.304121255874634, 2.304121255874634, 2.3361212611198425, 2.3681212663650513, 2.3681212663650513, 2.40012127161026, 2.4321212768554688, 2.4321212768554688, 2.4641212821006775,\
	 2.4961212873458862, 2.4961212873458862, 2.528121292591095, 2.5601212978363037, 2.5601212978363037, 2.5921213030815125, 2.624121308326721, 2.624121308326721, 2.65612131357193, 2.6881213188171387, 2.6881213188171387,\
	 2.7201213240623474, 2.752121329307556, 2.752121329307556, 2.784121334552765, 2.8161213397979736, 2.8161213397979736, 2.8481213450431824, 2.880121350288391, 2.880121350288391, 2.9121213555336, 2.9441213607788086,\
	 2.9441213607788086, 2.9761213660240173, 3.008121371269226, 3.008121371269226, 3.040121376514435, 3.0721213817596436, 3.0721213817596436, 3.1041213870048523, 3.136121392250061, 3.136121392250061, 3.1681213974952698,\
	 3.2001214027404785, 3.2001214027404785, 3.2321214079856873, 3.264121413230896, 3.264121413230896, 3.2961214184761047, 3.3281214237213135, 3.3281214237213135, 3.360121428966522, 3.392121434211731, 3.392121434211731,\
	 3.4241214394569397, 3.4561214447021484, 3.4561214447021484, 3.488121449947357, 3.520121455192566, 3.520121455192566, 3.5521214604377747, 3.5841214656829834, 3.5841214656829834, 3.616121470928192, 3.648121476173401,\
	 3.648121476173401, 3.6801214814186096, 3.7121214866638184, 3.7121214866638184, 3.744121491909027, 3.776121497154236, 3.776121497154236, 3.8081215023994446, 3.8401215076446533, 3.8401215076446533, 3.872121512889862,\
	 3.904121518135071, 3.904121518135071, 3.9361215233802795, 3.9681215286254883, 3.9681215286254883, 4.000121533870697, 4.032121539115906, 4.032121539115906, 4.0641215443611145, 4.096121549606323, 4.096121549606323,\
	 4.128121554851532, 4.160121560096741, 4.160121560096741, 4.1921215653419495, 4.224121570587158, 4.224121570587158}, \
	{830.5383, 830.5383, 830.5383, 893.9247, 893.9247, 893.9247, 1066.2737, 1066.2737, 1066.2737, 940.29346, 940.29346, 940.29346, 877.74097, 877.74097, 877.74097, 909.4383, 909.4383, 909.4383, 877.80505, 877.80505,\
	 877.80505, 814.84436, 814.84436, 814.84436, 799.45044, 799.45044, 799.45044, 768.338, 768.338, 768.338, 815.1141, 815.1141, 815.1141, 909.24963, 909.24963, 909.24963, 752.29126, 752.29126, 752.29126, 830.59033,\
	 830.59033, 830.59033, 940.5933, 940.5933, 940.5933, 971.581, 971.581, 971.581, 768.03845, 768.03845, 768.03845, 956.2013, 956.2013, 956.2013, 893.5797, 893.5797, 893.5797, 1019.53766, 1019.53766, 1019.53766,\
	 987.25073, 987.25073, 987.25073, 752.5305, 752.5305, 752.5305, 1050.158, 1050.158, 1050.158, 768.0941, 768.0941, 768.0941, 924.82654, 924.82654, 924.82654, 1129.0516, 1129.0516, 1129.0516, 987.25446, 987.25446,\
	 987.25446, 783.92786, 783.92786, 783.92786, 940.29675, 940.29675, 940.29675, 987.5032, 987.5032, 987.5032, 861.9572, 861.9572, 861.9572, 909.1233, 909.1233, 909.1233, 987.90173, 987.90173, 987.90173, 987.4779,\
	 987.4779, 987.4779, 925.0067, 925.0067, 925.0067, 893.215, 893.215, 893.215, 893.235, 893.235, 893.235, 1097.4434, 1097.4434, 1097.4434, 1019.1718, 1019.1718, 1019.1718, 909.603, 909.603, 909.603, 877.225, 877.225,\
	 877.225, 626.4407, 626.4407, 626.4407, 846.46716, 846.46716, 846.46716, 987.91187, 987.91187, 987.91187, 908.93726, 908.93726, 908.93726, 830.7702, 830.7702, 830.7702, 799.5614, 799.5614, 799.5614, 626.76184,\
	 626.76184, 626.76184, 1223.2715, 1223.2715, 1223.2715, 877.6503, 877.6503, 877.6503, 940.3828, 940.3828, 940.3828, 909.469, 909.469, 909.469, 767.981, 767.981, 767.981, 939.9754, 939.9754, 939.9754, 862.1433,\
	 862.1433, 862.1433, 987.763, 987.763, 987.763, 815.3882, 815.3882, 815.3882, 908.9831, 908.9831, 908.9831, 815.11255, 815.11255, 815.11255, 1034.9426, 1034.9426, 1034.9426, 877.8346, 877.8346, 877.8346, 971.96954,\
	 971.96954, 971.96954, 1019.4733, 1019.4733, 1019.4733, 1066.3608, 1066.3608, 1066.3608, 1553.4135, 1553.4135, 1553.4135, 1693.958, 1693.958, 1693.958, 1380.538, 1380.538, 1380.538, 1333.0835, 1333.0835, 1333.0835,\
	 1396.5532, 1396.5532, 1396.5532, 1129.5632, 1129.5632, 1129.5632, 1113.5476, 1113.5476, 1113.5476, 1066.1309, 1066.1309, 1066.1309, 972.4866, 972.4866, 972.4866, 893.9428, 893.9428, 893.9428, 783.6891, 783.6891,\
	 783.6891, 909.2079, 909.2079, 909.2079, 799.45624, 799.45624, 799.45624, 878.06433, 878.06433, 878.06433, 1223.128, 1223.128, 1223.128, 1144.6511, 1144.6511, 1144.6511, 987.6792, 987.6792, 987.6792, 893.2198,\
	 893.2198, 893.2198, 799.5865, 799.5865, 799.5865, 736.77563, 736.77563, 736.77563, 1097.6431, 1097.6431, 1097.6431, 1081.7622, 1081.7622, 1081.7622, 846.5427, 846.5427, 846.5427, 783.729, 783.729, 783.729,\
	 814.95465, 814.95465, 814.95465, 956.1958, 956.1958, 956.1958, 1019.41516, 1019.41516, 1019.41516, 925.1616, 925.1616, 925.1616, 1019.938, 1019.938, 1019.938, 830.8872, 830.8872, 830.8872, 1113.5409, 1113.5409,\
	 1113.5409, 877.94543, 877.94543, 877.94543, 925.0175, 925.0175, 925.0175, 1081.6204, 1081.6204, 1081.6204, 705.45544, 705.45544, 705.45544, 1003.3832, 1003.3832, 1003.3832, 768.09863, 768.09863, 768.09863, 799.3517,\
	 799.3517, 799.3517, 1018.8978, 1018.8978, 1018.8978, 799.41644, 799.41644, 799.41644, 751.99396, 751.99396, 751.99396, 846.2679, 846.2679, 846.2679, 799.56104, 799.56104, 799.56104, 846.6591, 846.6591, 846.6591,\
	 956.5985, 956.5985, 956.5985, 987.79834, 987.79834, 987.79834, 815.25916, 815.25916, 815.25916, 1066.0397, 1066.0397, 1066.0397, 1113.7578, 1113.7578, 1113.7578, 862.2152, 862.2152, 862.2152, 1176.238, 1176.238,\
	 1176.238, 987.3331, 987.3331, 987.3331, 925.4616, 925.4616, 925.4616, 830.46277, 830.46277, 830.46277, 1191.8911, 1191.8911, 1191.8911, 893.1666, 893.1666, 893.1666, 1129.0629, 1129.0629, 1129.0629, 815.34973, 815.34973,\
	 815.34973, 862.0071, 862.0071, 862.0071, 736.56116, 736.56116, 736.56116, 705.4182, 705.4182, 705.4182, 1003.3608, 1003.3608, 1003.3608, 1003.444, 1003.444, 1003.444, 861.88245, 861.88245, 861.88245, 987.9814, 987.9814,\
	 987.9814, 830.707, 830.707, 830.707, 720.8396, 720.8396, 720.8396, 987.31067, 987.31067, 987.31067, 783.7025, 783.7025, 783.7025, 846.4507}};

	//Unfortuantely, due to the formatting of the GBM data, we're going to have to do this with TGraphs with a bit of manipulation
	TGraphErrors * gbm_lightcurve_err = new TGraphErrors();
	TGraph * gbm_lightcurve = new TGraph();
	for (int i = 0; i < 400; i++) {
		gbm_lightcurve->SetPoint(i, gbm[0][i]+1.95, gbm[1][i]);
	}

	//Set error bars
	for (int i = 0; i < 133; i++) {
		int j = i*3+1;
		gbm_lightcurve_err->SetPoint(i, gbm[0][j]+1.95, gbm[1][j]);
		gbm_lightcurve_err->SetPointError(i, 0, sqrt(gbm[1][j]));
	}


	//Plot GRB lightcurve
	gbm_lightcurve->SetLineWidth(2);
	gbm_lightcurve->SetLineColor(kBlue+1);
	gbm_lightcurve_err->SetLineColor(kBlue+1);
	gbm_lightcurve->Draw("SAME");
	gbm_lightcurve_err->Draw("SAME HIST");

	TLegend * leg = new TLegend(0.15, 0.8, 0.6, 0.9);
	leg->AddEntry(lightcurve, "AMEGO simulated light curve", "le");
	leg->AddEntry(gbm_lightcurve_err, "GBM light curve", "le");
	leg->Draw();

};
